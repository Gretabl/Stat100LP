---
title: "What Makes a Good Society"
author: "Greta Lane and Rowan Pollard"
format: revealjs
editor_options: 
  chunk_output_type: console
---


```{r}
library(rmarkdown)
library(tidyverse)
library(janitor)
library(lubridate)
library(sf)
library(tmap)
library(geodata)
library( tinytable )
library(psych)
library(leaflet)
library(sp)

```

## Purpose
The purpose of our project is to see what variables make a "good" society by using the Human Development Index and the Human Happiness Index. We expect to see a relationship between happier countries and more developed countries. This means that countries with more infrastructure and social support tend to be happier countries.



```{r}
#| include: FALSE

simulated_ghr_data <-
  tibble(
    country =
      c("Argentina", "USA", "Belize", "China", "France", "Italy", "Japan", "Kenya", "Germany", "Canada"),
    happiness =
      runif(n = 10, min = 0, max = 10),
    healthy_mortality =
      runif(n = 10, min = 55, max = 85)
  )


simulated_HDI <-
  tibble(
    country =
      c("Argentina", "USA", "Belize", "China", "France", "Italy", "Japan", "Kenya", "Germany", "Canada"),
    income =
      runif(n = 10, min = 20000, max = 100000),
    healthcare =
      rbinom(n = 10, size = 1, prob = .5)
  )
```

```{r}
#| include: FALSE

ggplot( simulated_HDI) +
  geom_point( aes(x = income, y = healthcare, colour = country)) +
  labs( x = "income", y = "healthcare")


```


```{r}
#| include: FALSE

New_HDI <- read_csv("data/New_HDI.csv", show_col_types = FALSE)
head( New_HDI )

new_hdi <- clean_names(New_HDI) |>
  filter( hdi_rank != ".." ) |>
  mutate( hdi_rank = as.numeric( hdi_rank ) )
  
new_hdi <- new_hdi |>
  arrange(hdi_rank)
  
  
```

```{r}
#| include: FALSE


#left join 

new_hhi <- read_csv( "data/New_HHI.csv", show_col_types = FALSE)

new_hhi <- clean_names(new_hhi) |>
  filter( year == 2024)

fixed_hhi <- new_hhi |>
  select(year, rank, country_name, ladder_score) |>
  rename( country = country_name ) |>
  drop_na(year, rank, ladder_score)

joined_df <- full_join(new_hdi, fixed_hhi)

joined_df <- joined_df |>
  mutate( across( c( human_development_index_hdi, expected_years_of_schooling, mean_years_of_schooling, gross_national_income_gni_per_capita ), as.numeric ))

new_hdi$gross_national_income_gni_per_capita <- gsub(",", "", new_hdi$gross_national_income_gni_per_capita)

numeric_fix_hdi <- new_hdi |>
  mutate( across( c(gross_national_income_gni_per_capita), as.numeric ))



```



## Visualization 1
```{r}

ggplot( new_hdi ) + 
  geom_point(aes(x=hdi_rank, y=life_expectancy_at_birth)) +
  labs( x = "HDI Rank", y = " Average Life Expectancy")

```

## Visualization 2
```{r}

ggplot( joined_df ) + 
  geom_point(aes(x=hdi_rank, y=rank)) +
  labs( x = "HDI Rank", y = " Human Happiness Rank")

```

## Visualization 3
```{r}


ggplot( numeric_fix_hdi ) + 
  geom_point(aes(x=hdi_rank, y=gross_national_income_gni_per_capita)) +
  labs( x = "HDI Rank", y = "Gross National Income per Capita") 


```


```{r}
#| include: FALSE

tmap_options( basemap.server = "OpenStreetMap")
tmap_mode("plot")

joined_df <- joined_df |> 
  drop_na( hdi_rank )
joined_df <- joined_df |>
  mutate( country = case_when( grepl("Hong Kong", country, fixed=TRUE) ~ "Hong Kong",
                               grepl("Korea", country, fixed=TRUE) ~ "South Korea",
                               grepl("Bolivia", country, fixed=TRUE) ~ "Bolivia",
                               grepl("Moldova", country, fixed=TRUE) ~ "Moldova",
                               grepl("Türkiye", country, fixed=TRUE) ~ "Turkey",
                               grepl("Iran", country, fixed=TRUE) ~ "Iran",
                               grepl("Congo (Democratic Republic of the)", country, fixed=TRUE) ~ "Democratic Republic of the Congo",
                               grepl("Palestine", country, fixed=TRUE) ~ "Palestine",
                               grepl("Tanzania", country, fixed=TRUE) ~ "Tanzania",
                               grepl("Syria", country, fixed=TRUE) ~ "Syria",
                               grepl("Eswatini", country, fixed=TRUE) ~ "Eswatini",
                               grepl("Lao", country, fixed=TRUE) ~ "Laos",
                               grepl("Micronesia", country, fixed=TRUE) ~ "Micronesia",
                               .default = country ))
country_polygons <- gadm( country = joined_df$country, level = 0, path = getwd() )
country_polygons <- st_as_sf( country_polygons)

country_polygons <- left_join( country_polygons, joined_df %>% rename( COUNTRY = country ) )

```

```{r}
tm_shape( country_polygons ) + 
  tm_polygons( fill = "human_development_index_hdi")

# setdiff(joined_df$country, country_polygons$NAME_0)

```

```{r}
tmap_options( basemap.server = "OpenStreetMap")
tmap_mode("plot")

joined_df2 <- joined_df |> 
  drop_na( rank )
joined_df <- joined_df |>
  mutate( country = case_when( grepl("Hong Kong", country, fixed=TRUE) ~ "Hong Kong",
                               grepl("Korea", country, fixed=TRUE) ~ "South Korea",
                               grepl("Bolivia", country, fixed=TRUE) ~ "Bolivia",
                               grepl("Moldova", country, fixed=TRUE) ~ "Moldova",
                               grepl("Türkiye", country, fixed=TRUE) ~ "Turkey",
                               grepl("Iran", country, fixed=TRUE) ~ "Iran",
                               grepl("Congo (Democratic Republic of the)", country, fixed=TRUE) ~ "Democratic Republic of the Congo",
                               grepl("Palestine", country, fixed=TRUE) ~ "Palestine",
                               grepl("Tanzania", country, fixed=TRUE) ~ "Tanzania",
                               grepl("Syria", country, fixed=TRUE) ~ "Syria",
                               grepl("Eswatini", country, fixed=TRUE) ~ "Eswatini",
                               grepl("Lao", country, fixed=TRUE) ~ "Laos",
                               grepl("Micronesia", country, fixed=TRUE) ~ "Micronesia",
                               .default = country ))
country_polygons <- gadm( country = joined_df$country, level = 0, path = getwd() )
country_polygons <- st_as_sf( country_polygons)

country_polygons <- left_join( country_polygons, joined_df %>% rename( COUNTRY = country ) )

```

```{r}
tm_shape( country_polygons ) + 
  tm_polygons( fill = "human_development_index_hdi")


```


## Summary Statistics 
```{r}

described <- describe(joined_df |> select( -country, -human_development_index_hdi, -hdi_rank, -year, -rank, -ladder_score, -gross_national_income_gni_per_capita))

#summaries <- summary(joined_df)

#described <- describe(joined_df[, c("life_expectancy_at_birth", "gross_national_income_gni_per_capita")])

tt(described)


```

## Summary Statistics 
```{r}
gni <- describe( new_hdi |> select( - country, -human_development_index_hdi, -life_expectancy_at_birth, -expected_years_of_schooling, -mean_years_of_schooling, -hdi_rank))

??new_new_hdi <- new_hdi |>
  mutate( across( c( gross_national_income_gni_per_capita ), as.numeric ))


```



